/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package passwordManager;

import javax.swing.JOptionPane;
import javax.swing.event.TreeModelEvent;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;


/**
 *
 * @author Lion
 */
public class PasswordManUI extends javax.swing.JFrame {

    /**
     * Creates new form passwordManUI
     */
    public PasswordManUI() {
        
        initComponents();
       
        
    }
       //setting the jList to be a DefaultListModel, which is mutable
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addSitebtn = new javax.swing.JButton();
        siteScrollPane = new javax.swing.JScrollPane();
        siteTree = new javax.swing.JTree();
        adduser = new javax.swing.JButton();
        randPassword = new javax.swing.JButton();
        labMessage = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JButton();
        setPass = new javax.swing.JButton();
        getPass = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Password Manager");

        addSitebtn.setText("Add Website");
        addSitebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSitebtnActionPerformed(evt);
            }
        });

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Websites");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Site1");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("User 1");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("User 2");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Site 2");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("User 1");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("User 2");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Site 3");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("User 1");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("User 2");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        siteTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        siteTree.setToolTipText("");
        siteScrollPane.setViewportView(siteTree);

        adduser.setText("Add Username");
        adduser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adduserActionPerformed(evt);
            }
        });

        randPassword.setText("Generate Random Password");
        randPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randPasswordActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete Item");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        setPass.setText("Set Password");
        setPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setPassActionPerformed(evt);
            }
        });

        getPass.setText("Get Password");
        getPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getPassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(randPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addComponent(labMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(addSitebtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(adduser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(getPass, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                                .addComponent(setPass, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deleteBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(siteScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(addSitebtn)
                        .addGap(18, 18, 18)
                        .addComponent(adduser)
                        .addGap(18, 18, 18)
                        .addComponent(deleteBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(setPass)
                        .addGap(27, 27, 27)
                        .addComponent(getPass))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(siteScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labMessage)
                    .addComponent(randPassword))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addSitebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSitebtnActionPerformed
        // TODO add your handling code here:
        System.out.println("Add site button pressed.");
        labMessage.setText("");
        DefaultTreeModel model = (DefaultTreeModel)(siteTree.getModel()); 
        String newSite =
            JOptionPane.showInputDialog(this, "Please enter the name of your new website:");
        DefaultMutableTreeNode root = (DefaultMutableTreeNode)model.getRoot();
        root.add(new DefaultMutableTreeNode(newSite));
        model.reload();
        

       
    }//GEN-LAST:event_addSitebtnActionPerformed

    private void adduserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adduserActionPerformed
        System.out.println("Add user button pressed.");
        labMessage.setText("");
        DefaultTreeModel model = (DefaultTreeModel) (siteTree.getModel());
       
        DefaultMutableTreeNode parent = (DefaultMutableTreeNode) (siteTree.getLastSelectedPathComponent());
        if(parent.isRoot()){
            labMessage.setText("You must select a site to insert a username");
        }
        else {
            String newUser =
                JOptionPane.showInputDialog(this, "Please enter the name of your new username:");
            model.insertNodeInto(new DefaultMutableTreeNode(newUser), parent, parent.getChildCount());
        }
    }//GEN-LAST:event_adduserActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        labMessage.setText("");
        System.out.println("Delete button pressed.");
        DefaultTreeModel model = (DefaultTreeModel) (siteTree.getModel());
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) (siteTree.getLastSelectedPathComponent());
        if (node.isRoot()) {
            labMessage.setText("The root cannot be deleted");
        }
        else {
            if (node != null) {
                model.removeNodeFromParent(node);
            }
            else {
             labMessage.setText("Please select a website or username to delete");
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void randPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randPasswordActionPerformed
        // run password generator on click
        System.out.println("Password generated");
        // String password;
        JOptionPane.showInputDialog(null, "Highlight and press ctrl+c to copy the password:", "password123");
    }//GEN-LAST:event_randPasswordActionPerformed

    private void setPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setPassActionPerformed
        System.out.println("Set pass button pressed.");
        
        labMessage.setText("");
        DefaultTreeModel model = (DefaultTreeModel) (siteTree.getModel());
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) (siteTree.getLastSelectedPathComponent());
        if (node.isRoot()) {
            labMessage.setText("Please choose a username");
        }
        else {
            if (node.getLevel() == 1) {
                labMessage.setText("Please choose a username");
            }
            else {
                String password =
                    JOptionPane.showInputDialog(this, "Please enter the password for this username:");
                 System.out.println("Password is now" + password);
            }
        }
        
        
                
    }//GEN-LAST:event_setPassActionPerformed

    private void getPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getPassActionPerformed
        System.out.println("Get pass button pressed.");
        //String password from file
        labMessage.setText("");
        DefaultTreeModel model = (DefaultTreeModel) (siteTree.getModel());
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) (siteTree.getLastSelectedPathComponent());
        if (node.isRoot()) {
            labMessage.setText("Please choose a username");
        }
        else {
            if (node.getLevel() == 1) {
                labMessage.setText("Please choose a username");
            }
            else {
        
                JOptionPane.showInputDialog(null, "Highlight and press ctrl+c to copy the password:", "password123");
            }
        }
    }//GEN-LAST:event_getPassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PasswordManUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PasswordManUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PasswordManUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasswordManUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PasswordManUI().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSitebtn;
    private javax.swing.JButton adduser;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton getPass;
    private javax.swing.JLabel labMessage;
    private javax.swing.JButton randPassword;
    private javax.swing.JButton setPass;
    private javax.swing.JScrollPane siteScrollPane;
    private javax.swing.JTree siteTree;
    // End of variables declaration//GEN-END:variables
}
